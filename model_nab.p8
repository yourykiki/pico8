pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- model nabateen

local cam,scl,wf={},3,false

local pnts={
 {-48,4,16},{-16,4,16},{-16,4,0},{-48,4,0},
 {-16,0,16},{-16,0,0},{-48,0,0},
 {16,4,16},{48,4,16},{48,4,0},{16,4,0},
 {16,0,16},{48,0,0},{16,0,0},
 {-16,8,16},{16,8,16},
 {-48,56,16},{-16,56,16},{16,56,16},{48,56,16},
 {-8,48,16},{8,48,16},{8,8,16},{-8,8,16},
 {-48,56,0},{-24,56,0},{24,56,0},{48,56,0},--28
 {-24,56,-8},{24,56,-8},--30
 {-32,72,16},{-12,72,16},{12,72,16},{32,72,16}, --34
 {-48,72,4},{0,72,4},{48,72,4}, --37
 {-48,64,0},{-24,64,0},{0,72,-8},{24,64,0},{48,64,0},--42
 {-24,64,-8},{24,64,-8},--44
 {-48,112,16},{-32,112,16},{-48,112,4},{-32,120,4},{-32,72,4},--49
 {32,112,16},{48,112,16},{32,120,4},{48,112,4},{32,72,4},--54
 {-12,112,16},{12,112,16},{0,112,4},{0,120,16}
}
local tris={
 1,2,3,4, 1,3,4,4, 2,5,6,4, 2,6,3,4,
 3,6,7,4, 3,7,4,4,
 8,9,10,4, 8,10,11,4, 8,11,14,4, 8,14,12,4,
 10,13,14,4, 10,14,11,4,
 15,16,14,15, 15,14,6,15, 15,6,5,4, 16,12,14,4,
 17,18,2,5, 17,2,1,5, 19,20,9,5, 19,9,8,5,
 18,19,22,15, 18,22,21,15, 19,16,22,15, 22,16,23,15,
 18,21,15,15, 21,24,15,15,
 26,18,17,4, 25,26,17,4, 
 28,20,19,4, 27,28,19,4,
 27,19,18,4, 18,26,27,4, 26,29,30,4, 26,30,27,4,
 31,32,49,15, 32,36,49,15, 33,34,54,15, 33,54,36,15,
 35,36,39,4, 35,39,38,4, 36,37,42,4, 36,42,41,4,
 38,39,26,4, 38,26,25,4, 41,42,28,4, 41,28,27,4, 
 39,43,26,4, 29,26,43,4, 43,44,30,4, 43,30,29,4,
 44,41,27,4, 44,27,30,4,
 39,36,40,15, 39,40,43,15, 40,36,41,15, 40,41,44,15,
 40,44,43,4,
 45,46,48,15, 45,48,47,15,
 48,46,31,4, 48,31,49,4, 47,48,49,4, 47,49,35,4,
 50,51,52,15, 51,53,52,15,
 52,53,54,4, 53,37,54,4, 50,52,34,4, 34,52,54,4,
 56,33,57,4, 57,33,36,4, 55,57,32,4, 32,57,36,4,
 56,57,58,15, 57,55,58,15,
 46,55,32,5, 46,32,31,5, 56,50,34,5, 56,34,33,5
}


function init_cam()
 return {
  pos={0,48,-56},
  ang=0.25,
  mf=function(self,v)
   local p,a=self.pos,self.ang
   p[1]=p[1]+cos(a)*v
   p[3]=p[3]-sin(a)*v
   self.pos=p
  end,
  sb=function(self,v)
   local p,a=self.pos,self.ang
   p[1]=p[1]-cos(a)*v
   p[3]=p[3]+sin(a)*v
   self.pos=p
  end,
  projiso=function(self,pnts)
   local vert={}
   for i=1,#pnts do 
    local pnt=pnts[i]
    vert[i]={
     pnt[1]+pnt[3]*0.5+64,
     -pnt[2]-pnt[3]*0.5+127
    }
   end
   return vert
  end,
  proj=function(self,pnts)
   local vert={}
   for i=1,#pnts do 
    local v=pnts[i]
    local x,y,z=v[1]-self.pos[1],
     v[2]-self.pos[2],
     v[3]-self.pos[3]
    local w=63.5/z
    vert[i]={
     63.5+flr(w*x),
     63.5-flr(w*y)
    }
   end
   return vert
  end
 }
end

function _init()
 cam=init_cam()
end
function _update()
 if (btn(⬆️)) cam:mf(0.25)
 if (btn(⬇️)) cam:sb(0.25)
 if (btn(⬅️)) cam.ang-=0.02
 if (btn(➡️)) cam.ang+=0.02
 if (btn(⬆️,1)) cam.pos[2]+=1
 if (btn(⬇️,1)) cam.pos[2]-=1
 if (btnp(❎)) wf=not wf
end

function _draw()
 cls""
 -- cam
 --camera(-60,-127)
 -- proj
 local proj=cam:proj(pnts)
 -- draw
 color(6)
 for i=1,#tris,4 do
  local v1,v2,v3,c=
   proj[tris[i]],
   proj[tris[i+1]],
   proj[tris[i+2]],
   tris[i+3]
  --if (i==154) color (8)
  tri(v1[1],v1[2],v2[1],v2[2],v3[1],v3[2],c)
  -- wireframe
  if wf then
   line(v1[1],v1[2],v2[1],v2[2],6)
   line(v3[1],v3[2])
   line(v1[1],v1[2])  
  end
 end
 -- pouet
 --camera()
 print(stat(1).." "
   ..(#tris/3).." ",0,0,7)
end

-->8
-- @p01
function p01_trapeze_h(l,r,lt,rt,y0,y1)
 lt,rt=(lt-l)/(y1-y0),(rt-r)/(y1-y0)
 if(y0<0)l,r,y0=l-y0*lt,r-y0*rt,0
 y1=min(y1,128)
 for y0=y0,y1 do
  rectfill(l,y0,r,y0)
  l+=lt
  r+=rt
 end
end
function p01_trapeze_w(t,b,tt,bt,x0,x1)
 tt,bt=(tt-t)/(x1-x0),(bt-b)/(x1-x0)
 if(x0<0)t,b,x0=t-x0*tt,b-x0*bt,0
 x1=min(x1,128)
 for x0=x0,x1 do
  rectfill(x0,t,x0,b)
  t+=tt
  b+=bt
 end
end
function tri(x0,y0,x1,y1,x2,y2,col)
 color(col)
 if(y1<y0)x0,x1,y0,y1=x1,x0,y1,y0
 if(y2<y0)x0,x2,y0,y2=x2,x0,y2,y0
 if(y2<y1)x1,x2,y1,y2=x2,x1,y2,y1
 if max(x2,max(x1,x0))-min(x2,min(x1,x0)) > y2-y0 then
  col=x0+(x2-x0)/(y2-y0)*(y1-y0)
  p01_trapeze_h(x0,x0,x1,col,y0,y1)
  p01_trapeze_h(x1,col,x2,x2,y1,y2)
 else
  if(x1<x0)x0,x1,y0,y1=x1,x0,y1,y0
  if(x2<x0)x0,x2,y0,y2=x2,x0,y2,y0
  if(x2<x1)x1,x2,y1,y2=x2,x1,y2,y1
  col=y0+(y2-y0)/(x2-x0)*(x1-x0)
  p01_trapeze_w(y0,y0,y1,col,x0,x1)
  p01_trapeze_w(y1,col,y2,y2,x1,x2)
 end
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
